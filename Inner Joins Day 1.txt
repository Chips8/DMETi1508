--JOINS
Select * from staff
Select * from position
--Select names of all the staff and the position description they hold
Select firstname, lastname, positiondescription
from staff, position

--Staff 10 x Position 7 = 70 <-- Not true
--Find related records

--does not work because we need to specify how the tables relate to ech other. WHat links them together? (PK and FK)
--ANSI SQL (old the school away) DO NOT USE IN THIS COURSE
Select firstname, lastname, positiondescription
from staff,position
Where staff.positionID = position.positionID
--Correct in SQL SERVER
--Select columns you need
Select firstname,lastname, positiondescription
from position
inner join staff on position.PositionID = staff.PositionID

--Select Columns
--From tAble 1
--Inner join table 2 on table 1 join field = table 2 join field -->FK , PK
--- THE ON shows the relation of together PK --- FK = position.PositionID = staff.PositionID
-- ON identifies how the tables relate(PK in parent, FK in child)
--Connect way in SQL server
Select firstname,lastname, positiondescription
from position
inner join staff on position.PositionID = staff.PositionID

--DO whatever you want inside a joint
--Order of the inner join tables  or the order of the ON does not matter
Select firstname,lastname, positiondescription
from staff
inner join position on position.PositionID = staff.PositionID
--Select all the positiondescriptions and the name of the staff in them
Select positiondescription, firstname,lastname
from staff
inner join position on position.PositionID = staff.PositionID
--works, but missing one position Description :(
--It is the one that has no related record in staff
--inner joins only return records if there are related records in the join
--Assistant dean (positionID 7) did not show up because there are no staff with positionID 7
--Select the student full names and the offering codes they are registered in
Select firstname + ' ' + lastname as 'studentname', offeringcode
from student
inner join registration on student.StudentID = Registration.StudentID
--same question but also select the studentID
Select student.studentID, firstname + ' ' + lastname as 'studentname', offeringcode
from student
inner join registration on student.StudentID = Registration.StudentID
--since studentID is in more than one table in the join you must specify which one to
--select it from. ALWAYS select it from Parent.
--More than 2 tables
--Select the staff names, poisitionDesc, semsestercode they taught in
Select firstname, lastname, positionDescription, semestercode
from position
inner join staff on Position.PositionID = staff.PositionID
inner join offering on staff.staffID = offering.STaffID
--remember, only records that have child records are returned with inner joins
--If I join the course table and select coursname as well, will I lose any more data because of
--of the inner join?

Select firstname, lastname, positionDescription, semestercode
from position
inner join staff on Position.PositionID = staff.PositionID
inner join offering on staff.staffID = offering.STaffID
inner join course on course.courseid = offering.CourseID
--parent records only returns records with child records
--Names of students that are registered in at least one offering
--try 2 ways

--Facts that they return related records
--Names and studentID's of students that are registered in at least on offering
Select distinct student.studentid, firstname, lastname from student
inner join Registration on Student.StudentID = Registration.STudentID
--names of students that are registered in offering 1000
Select firstname,lastname from student
inner join Registration on student.studentID = Registration.STudentID
where offeringcode = 1000
--Inner joins and aggregates
--Select student firstname, lastname and avg mark for each student
Select firstname,lastname,avg(mark) from student
inner join Registration on student.studentID = Registration.STudentID
group by student.StudentID, firstname,lastname
-- not in group by clause when using aggregate
--YOU MUST GROUP ON WHAT UNIQUELY IDENTIFIES WHAT YOU WANT TO GROUP ON
-- What is the avg payment amount of each payment type?
--Show the paymenttypeDesc and the average.

Select PaymentTypeDescription, avg(amount) as 'average' from PaymentType
inner join Payment on payment.PaymentID = PaymentType.PaymentTypeID
group by PaymentType.PaymentTypeDescription
--group by NON-AGGREGATE FIELDS
--GROUP ON UNIQUE IDENTIFIER
