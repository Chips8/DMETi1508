Constraints: 
- Think of them as rules
2* types of Constraint: -
- Column level: - affects a single column
 		- coded on that columns definition
Table level: - affects/involves > 1 column
	     - coded on their own line
Create parent tables first
never have a child exist without parents,
but must drop child first to drop parents

can have composite foreign keys, two attribute forming primary key
not gonna happen in this course.

print 'How are you today?;)'

---Highlight all and it drops and recreate, easier to use
Drop table SaleBook
Drop table Book
---SaleBook is a composite attribute = coded on their own line/column
Drop table Sale
---Can't get rid of a table being referenced, must drop child first

---Create a databade
---Create database Clarence
Create table Book
(
ISPN varchar(13) not null
---still on ISPN section, keep it neat, same as prog fundamentals
constraint PK_Book primary key clustered,
---create a PK constraint on ISPN, 
---we will create index later
title varchar(100) not null,
price smallmoney null,
pages smallint null,
datePublished datetime not null,
)

Create table Sale
(
SaleID int identity (1,1) not null
---1st record starts at 1, increment by 1
constraint PK_Sale primary key clustered,
SaleDate datetime not null,
Total money not null,
)
Create table SaleBook
(
Saleid int not null
constraint fk_saleBookToSale references Sale(SaleID),
--- Once created FK = boom, hasn't been created yet
--- Have to create the key first
--- Parent has to exist before child 
--- are you a valid ISPN, a valid book?
--- haven't created sale yet, it's below
ISPN varchar(13)not null
constraint fk_saleBookToBook references Book(ISPN),
Qty int not null,
---Composite key in it's own line
constraint pk_SaleBook primary key clustered(Saleid, ISPN)
)


insert into book(ISPN, title, price, pages, datePublished)
values('1234567890', 'SQL Rulz', 5, 100, 'Jan 1, 2014')
----* means select all columns from table

insert into Sale (SaleDate, total)
--- Sale id generated by itself
values('Jan 20, 2015', 100)

select * from sale

select * from book
---To change a table that is empty you can drop it and change it
--- can't add primary key more than once
---Primary key constraint enforces unique values
---Identity creates the value for us(start, increment)
---column level constraint on our foreign key


-- Order of existence
--- They have to exist first
--- Drops first, easier to recreate




EXCERCISE

Create table Course
(
courseID char(6) not null
constraint PK_Course primary key clustered,
coureName varchar(40) not null,
courseHours smallint null,
NoOFStudents smallint null,
)
Create table Student
(
StudentID int not null
constraint PK_Student primary key clustered,
studentFirstName varchar(40) not null,
studentLastName varchar(40) not null,
genderCode char(1) not null,
studentAddress varchar(30) null,
Birthdate datetime null,
PostalCode char(6) null,
avgMark decimal(4,1) null,
NoOFCourses smallint null
)
Create table Grade
(
StudentID int not null
constraint fk_Student references Student(StudentID),
CourseID char(6) not null
constraint fk_CourseID references Course(CourseID),
mark smallint null,
constraint pk_Grade primary key clustered(StudentID, CourseID)
)
Create table Club
(
ClubID int not null
constraint pk_Club primary key clustered,
clubName varchar(50) not null, 

)
Create table Activity
(
StudentID int not null
constraint fk_Student references Student(StudentID),
ClubID int not null
constraint fk_Club references Club(ClubID),
constraint pk_Activity primary key clustered (StudentID, ClubID)
)